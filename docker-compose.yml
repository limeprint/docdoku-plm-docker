# DocDoku, Professional Open Source
# Copyright 2006 - 2017 DocDoku SARL
#
# This file is part of DocDokuPLM.
#
# DocDokuPLM is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# DocDokuPLM is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with DocDokuPLM.  If not, see <http://www.gnu.org/licenses/>.
#
# DocDokuPLM platform docker file

version: '2'

services:

  # Web front: nginx server on host source files
  # volumes: static files from web front source on the host.
  front:
    build:
      context: ./front
    networks:
      - network
    ports:
      - 13000:3000
    volumes:
      - ./volumes/web-front:/usr/share/nginx/dist
      - ./volumes/src/docdoku-web-front/app:/usr/share/nginx/app

  # Payara instance - JEE 8 application server
  back:
    mem_limit: 4g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    depends_on:
      - db
      - es
      - smtp
    build:
      context: ./back
      args:
        - DOCDOKU_PLM_CODEBASE=https://docdokuplm.local:10080
        - HEAP_SIZE=512m
        - JWT_ENABLED=true
        - JWT_KEY=MyVerySecretPhrase
        - SESSION_ENABLED=false
        - BASIC_AUTH_ENABLED=false
        - DATABASE_USER=my_user
        - DATABASE_PWD=my_password
        - DATABASE_SERVER_NAME=db
        - DATABASE_NAME=my_db
        - ES_SERVER_URI=http://es:9200
        - ES_SERVER_SHARDS=4
        - ES_SERVER_AUTO_EXPAND_REPLICAS=0-3
        - ES_SERVER_REPLICAS=0
        - ES_SERVER_USERNAME=elastic
        - ES_SERVER_PWD=changeme
        - SMTP_HOST=smtp
        - SMTP_PORT=1025
        - SMTP_USER=user
        - SMTP_FROM_ADDR=notifications@docdokuplm.local
    volumes:
      - ./volumes/autodeploy:/opt/payara/appserver/glassfish/domains/production/autodeploy
      - ./volumes/vault:/var/lib/docdoku/vault
      - ./volumes/conversions:/var/lib/docdoku/conversions
      - ./volumes/plugins:/opt/plugins
      - ./volumes/native-libs:/opt/native-libs
    networks:
      - network
    ports:
      - 18080:8080
      - 14848:4848
      - 19009:9009
      - 18686:8686

  # Nginx global proxy
  # The application will run at http://localhost:10080, change if needed
  proxy:
    depends_on:
      - front
      - back
      - es
      - kibana
      - smtp
      - adminer
      - kafka
    build:
      context: ./proxy
      args:
        - DOMAIN=docdokuplm.local
        - EMAIL=admin@docdokuplm.local
    networks:
      - network
    ports:
      - 10080:10080
      - 10081:10081
      - 10082:10082
      - 10083:10083
      - 10084:10084
      - 10085:10085

  # ElasticSearch instance
  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.6.1
    environment:
      - cluster.name=docdokuplm
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    networks:
      - network
    ports:
      - 19200:9200
      - 19300:9300
    volumes:
      - es:/usr/share/elasticsearch/data
  # Kibana instance
  kibana:
     image: docker.elastic.co/kibana/kibana:6.6.1
     environment:
       - SERVER_NAME=kibana
       - ELASTICSEARCH_URL=http://es:9200
     networks:
       - network
     depends_on:
       - es
     ports:
       - 5601:5601

  db:
    image: postgres:11.2
    environment:
      - POSTGRES_USER=my_user
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=my_db
      - MYSQL_RANDOM_ROOT_PASSWORD=yes
    networks:
      - network
    volumes:
      - db:/var/lib/postgresql/data


    # DocDokuPLM build env
  build-env:
    build: ./build-env
    depends_on: 
      - back
      - proxy
    volumes:
      - ./volumes/src:/src
      - ./volumes/m2:/root/.m2
      - ./volumes/npm:/root/.npm
    networks:
      - network
    links:
      - proxy:docdokuplm.local

  # View emails sent by the platform in browser
  smtp:
    image: mailhog/mailhog
    networks:
      - network

  # SQL Management
  adminer:
    image: adminer:4.7.1-standalone
    networks:
      - network
    depends_on: 
      - db

  zookeeper:
    image: wurstmeister/zookeeper
    networks:
      - network
  kafka:
    image: wurstmeister/kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "CONVERT:1:1"
    networks:
      - network
    depends_on:
      - zookeeper

  conversion_service:
    image: docdoku/docdoku-plm-conversion-service
    networks:
      - network
    volumes:
      - ./volumes/vault:/data/vault
      - ./volumes/conversions:/data/conversions
    depends_on:
      - kafka
      - back

  conversion_service_2:
    image: docdoku/docdoku-plm-conversion-service
    networks:
      - network
    volumes:
      - ./volumes/vault:/data/vault
      - ./volumes/conversions:/data/conversions
    depends_on:
      - kafka
      - back

networks:
  network:
    driver: bridge

volumes:
  db:
  es:

