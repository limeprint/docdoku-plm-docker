# DocDoku, Professional Open Source
# Copyright 2006 - 2017 DocDoku SARL
#
# This file is part of DocDokuPLM.
#
# DocDokuPLM is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# DocDokuPLM is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with DocDokuPLM.  If not, see <http://www.gnu.org/licenses/>.
#
# DocDokuPLM platform docker file

version: '3.7'

services:

  front:
    image: docdoku/docdoku-web-front:latest
    networks:
      - network
    ports:
      - 13000:80
    environment:
      - SERVER_SSL=true
      - SERVER_DOMAIN=docdokuplm.local
      - SERVER_PORT=10080
      - SERVER_CONTEXT_PATH=/eplmp-server-rest
      - SERVER_WS_DOMAIN=docdokuplm.local
      - CONTEXT_PATH=/
      - PREFER_LOGIN_WITH=false
    volumes:
      - ./volumes/src/docdoku-web-front/app:/usr/share/nginx/html

  # Payara instance - JEE 8 application server
  back:
    depends_on:
      - db
      - es
      - smtp
    image: polarsys/eplmp-server:latest
    environment:
      - DOCDOKU_PLM_CODEBASE=https://docdokuplm.local:10080
      - HEAP_SIZE=512m
      - JWT_ENABLED=true
      - JWT_KEY=MyVerySecretPhrase
      - SESSION_ENABLED=false
      - BASIC_AUTH_ENABLED=false
      - DATABASE_USER=my_user
      - DATABASE_PWD=my_password
      - DATABASE_SERVER_NAME=db
      - DATABASE_NAME=my_db
      - ES_SERVER_URI=http://es:9200
      - ES_SERVER_USERNAME=elastic
      - ES_SERVER_PWD=changeme
      - ES_PREFIX=docdokuplm-local
      - KEYSTORE_PASS=changeit
      - KEYSTORE_KEY_ALIAS=my_key
      - KEYSTORE_TYPE=PKCS12
      - KEYSTORE_KEY_PASS=changeit
      - SMTP_HOST=smtp
      - SMTP_PORT=1025
      - SMTP_USER=user
      - SMTP_FROM_ADDR=notifications@docdokuplm.local
      - DEBUG=true
    volumes:
      - ./volumes/autodeploy:/opt/payara/appserver/glassfish/domains/production/autodeploy
      - ./volumes/vault:/var/lib/docdoku/vault
      - ./volumes/conversions:/var/lib/docdoku/conversions
      - ./eplmp/keystore:/opt/payara41/keystore
    networks:
      - network
    ports:
      - 18080:8080
      - 14848:4848
      - 19009:9009
      - 18686:8686

  # Nginx global proxy
  # The application will run at http://localhost:10080, change if needed
  proxy:
    depends_on:
      - front
      - back
      - es
      - kibana
      - smtp
      - adminer
      - kafka
    image: nginx:1.19.1-alpine
    volumes:
      - ./proxy/default.conf:/etc/nginx/conf.d/default.conf
      - ./proxy/ssl:/etc/nginx/ssl
    networks:
      - network
    ports:
      - 10080:10080
      - 10081:10081
      - 10082:10082
      - 10083:10083
      - 10084:10084
      - 10085:10085

  # ElasticSearch instance
  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    environment:
      - cluster.name=docdokuplm
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    networks:
      - network
    ports:
      - 19200:9200
      - 19300:9300
    volumes:
      - es:/usr/share/elasticsearch/data
  # Kibana instance
  kibana:
     image: docker.elastic.co/kibana/kibana:7.8.0
     environment:
       - SERVER_NAME=kibana
       - ELASTICSEARCH_URL=http://es:9200
     networks:
       - network
     depends_on:
       - es

  db:
    image: postgres:11.2
    environment:
      - POSTGRES_USER=my_user
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=my_db
      - MYSQL_RANDOM_ROOT_PASSWORD=yes
    networks:
      - network
    volumes:
      - db:/var/lib/postgresql/data
      - ./volumes/dumps:/var/data/dumps

  # View emails sent by the platform in browser
  smtp:
    image: mailhog/mailhog
    networks:
      - network

  # SQL Management
  adminer:
    image: adminer:4.7.1-standalone
    networks:
      - network
    depends_on: 
      - db

  zookeeper:
    image: wurstmeister/zookeeper
    networks:
      - network
  kafka:
    image: wurstmeister/kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "CONVERT:1:1"
      LOG_RETENTION_HOURS: 1
    networks:
      - network
    depends_on:
      - zookeeper

  conversion_service:
    image: docdoku/docdoku-plm-conversion-service
    environment:
      - JAVA_DEBUG=true
    networks:
      - network
    volumes:
      - ./volumes/vault:/data/vault
      - ./volumes/conversions:/data/conversions
    ports:
    - 10005:5005
    depends_on:
      - kafka
      - back

  conversion_service_non_standard:
    image: docdoku/docdoku-plm-conversion-service-non-standard
    environment:
      - JAVA_DEBUG=true
    networks:
      - network
    volumes:
      - ./volumes/vault:/data/vault
      - ./volumes/conversions:/data/conversions
      - ./license/solidworks/license.txt:/opt/plugins/solidworks/license.txt
      - ./license/catia/license.txt:/opt/plugins/catia/license.txt
    ports:
      - 10006:5005
    depends_on:
      - kafka
      - back

networks:
  network:
    driver: bridge

volumes:
  db:
  es:

